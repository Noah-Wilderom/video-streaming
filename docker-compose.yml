version: "3"

services:
  mysql:
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: videostreaming
      MYSQL_USER: videostreaming
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - '3306:3306'
    volumes:
      - ./db-data/mysql/:/var/lib/mysql

  cache:
    image: redis:7.4-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./db-data/redis/:/data

  api-gateway:
    image: alpine:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    volumes:
      - ./bin/api-gateway:/app/api-gateway
      - ./api-gateway/configs/:/app/configs/
    entrypoint: [ "/app/api-gateway" ]

  user-service:
    image: alpine:latest
    container_name: user-service
    restart: unless-stopped
    ports:
      - "5001:5001"
    volumes:
      - ./bin/user-service:/app/user-service
      - ./user-service/configs/.env:/.env
      - ./user-service/migrations:/app/migrations/
    entrypoint: [ "/app/user-service" ]
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=jobs sslmode=disable timezone=Europe/Amsterdam connect_timeout=5"

  video-service:
    image: alpine:latest
    container_name: video-service
    ports:
      - "5002:5002"
    volumes:
      - ./bin/video-service:/app/video-service
      - ./video-service/configs/.env:/.env
      - ./output/:/output
    entrypoint: [ "/app/video-service" ]
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=jobs sslmode=disable timezone=Europe/Amsterdam connect_timeout=5"

  streaming-service:
    image: alpine:latest
    container_name: streaming-service
    ports:
      - "5003:5003"
    volumes:
      - ./bin/streaming-service:/app/streaming-service
    entrypoint: [ "/app/streaming-service" ]

volumes:
  postgres_data:
    driver: local

networks:
  shared:
    driver: bridge